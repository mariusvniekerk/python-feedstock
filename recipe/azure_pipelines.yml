# This is exclusively windows containers?
# 
# resources:
#   containers:
#   - container: linux-anvil  # identifier (no spaces allowed)
#     image: condaforge/linux-anvil  # container image name
#     localImage: false  # whether to build the image locally instead of pulling from a registry

jobs:
- job: win_64
  pool:
    # vmImage: vs2015-win2012r2
    vmImage: vs2017-win2016
  strategy:
    maxParallel: 4  
    matrix:
      win_c_compilervs2008cxx_compilervs2008vc9:
        CONFIG: win_c_compilervs2008cxx_compilervs2008vc9
  steps:

    - script: |
        choco install vcpython27 -fdv -y --debug
      condition: contains(variables['CONFIG'], 'vs2008')
      displayName: install vcpython27

    - powershell: |
        Set-PSDebug -Trace 1
        
        $batchcontent = @"
        ECHO ON
        SET vcpython=C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0
        
        DIR "%vcpython%"

        CALL "%vcpython%\vcvarsall.bat" %*
        "@

        $batchDir = "C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0\VC"
        $batchPath = "$batchDir" + "\vcvarsall.bat"
        New-Item -Path $batchPath -ItemType "file" -Force
        
        Set-Content -Value $batchcontent -Path $batchPath

        Get-ChildItem -Path $batchDir

        Get-ChildItem -Path ($batchDir + '\..')

      condition: contains(variables['CONFIG'], 'vs2008')
      displayName: Patch vs2008

    # - script: install_miniconda.bat
    - task: CondaEnvironment@1
      inputs:
        packageSpecs: 'python=3.6 conda-build conda conda-forge::conda-forge-ci-setup=2' # Optional
        installOptions: "-c conda-forge"
        updateConda: false

    - script: set PYTHONUNBUFFERED=1

    # Add our channels.
    - script: conda.exe config --set show_channel_urls true
      displayName: configure conda
    - script: conda.exe config --remove channels defaults
      displayName: configure conda
    - script: conda.exe config --add channels defaults
      displayName: configure conda
    - script: conda.exe config --add channels conda-forge
      displayName: configure conda


    # Configure the VM.
    - script: call run_conda_forge_build_setup
      displayName: conda-forge build setup

    # Special cased version setting some more things!
    - script: |
        conda.exe build recipe -m .ci_support\%CONFIG%.yaml --quiet
      displayName: Build recipe (vs2008)
      env: {
        # VS90COMNTOOLS: "C:\\Program Files (x86)\\Common Files\\Microsoft\\Visual C++ for Python\\9.0"
        VS90COMNTOOLS: "C:\\Program Files (x86)\\Common Files\\Microsoft\\Visual C++ for Python\\9.0\\VC\\bin",
      }
      condition: contains(variables['CONFIG'], 'vs2008')

    - script: |
        conda.exe build recipe -m .ci_support\%CONFIG%.yaml --quiet
      displayName: Build recipe
      condition: not(contains(variables['CONFIG'], 'vs2008'))

- job: osx_64
  pool:
    vmImage: xcode9-macos10.13
  strategy:
    maxParallel: 4  
    matrix:
      osx_c_compilerclangcxx_compilerclangxx:
        CONFIG: osx_c_compilerclangcxx_compilerclangxx
      osx_c_compilertoolchain_ccxx_compilertoolchain_cxx:
        CONFIG: osx_c_compilertoolchain_ccxx_compilertoolchain_cxx
  steps:

  - script: |
      set -x
      set -e
      brew install xz
      curl -o MacOSX10.9.sdk.tar.xz -L https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.9.sdk.tar.xz
      sudo tar -xf MacOSX10.9.sdk.tar.xz -C /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
    displayName: SDK

  - script: |
      set -x
      set -e
      ls /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
      echo "1"
    displayName: List installed SDKs

  - script: |
      echo ""
      echo "Removing homebrew from Travis CI to avoid conflicts."
      curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall > ~/uninstall_homebrew
      chmod +x ~/uninstall_homebrew
      ~/uninstall_homebrew -fq
      rm ~/uninstall_homebrew
    displayName: Remove homebrew

  - script: |
      set -x
      set -e
      echo "Installing Miniconda"
      curl -o $(Build.StagingDirectory)/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
      chmod +x $(Build.StagingDirectory)/miniconda.sh
      $(Build.StagingDirectory)/miniconda.sh -b -p $(Build.StagingDirectory)/miniconda
      export PATH=$(Build.StagingDirectory)/miniconda/bin:$PATH
      echo "Setting up Conda environment"
    displayName: 'Install miniconda'
  
  - script: |
      set -x
      set -e
      export PATH=$(Build.StagingDirectory)/miniconda/bin:$PATH
      conda install --yes conda-forge::conda-forge-ci-setup=2
    displayName: 'Add ci-setup=2'

  - script: |
      set -x
      set -e
      
      export PATH=$(Build.StagingDirectory)/miniconda/bin:$PATH
      echo ""
      echo "Configuring conda."
      
      setup_conda_rc ./ ./recipe ./.ci_support/${CONFIG}.yaml

      source run_conda_forge_build_setup
      conda update --yes --override-channels -c conda-forge -c defaults --all
    displayName: Configure conda and conda-build

  - script: |
      set -x
      set -e

      export PATH=$(Build.StagingDirectory)/miniconda/bin:$PATH
      mangle_compiler ./ ./recipe ./.ci_support/${CONFIG}.yaml
    displayName: Mangle compiler

  - script: |
      set -x
      set -e

      export PATH=$(Build.StagingDirectory)/miniconda/bin:$PATH
      make_build_number ./ ./recipe ./.ci_support/${CONFIG}.yaml
    displayName: Generate build number clobber

  - script: | 
      set -x
      set -e

      export PATH=$(Build.StagingDirectory)/miniconda/bin:$PATH
      conda build ./recipe -m ./.ci_support/${CONFIG}.yaml --clobber-file ./.ci_support/clobber_${CONFIG}.yaml
    displayName: Build recipe

  - script: |
      set -x
      set -e

      export PATH=$(Build.StagingDirectory)/miniconda/bin:$PATH
      upload_package ./ ./recipe ./.ci_support/${CONFIG}.yaml
    displayName: Upload recipe

- job: linux_64
  pool:
    vmImage: ubuntu-16.04
  strategy:
    maxParallel: 4
    matrix:
      linux_c_compilergcccxx_compilergxx:
        CONFIG: linux_c_compilergcccxx_compilergxx
      linux_c_compilertoolchain_ccxx_compilertoolchain_cxx:
        CONFIG: linux_c_compilertoolchain_ccxx_compilertoolchain_cxx
  steps:
  - script: |
      sudo pip install --upgrade pip
      sudo pip install setuptools shyaml
    displayName: Install dependencies
  - script: .circleci/run_docker_build.sh
    displayName: Run docker build
